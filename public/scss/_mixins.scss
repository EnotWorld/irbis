$breakpoint-to-fluid: 992px;
$breakpoint-to-sm: 720px;
$base-vw: 1920px;

$breakpoint-lg: 992px;
$breakpoint-md: 768px;
$breakpoint-sm: 576px;

$container-lg: 1690px;
$container-md: 720px;
$container-sm: 540px;

$p: 15px;
$p-md: 15px;

@mixin container {
  width: 100%;
  max-width: $container-lg;
  padding-left: $p;
  padding-right: $p;
  margin: 0 auto;

  @media screen and (max-width: $breakpoint-lg) {
    max-width: $container-md;
  }

  @media screen and (max-width: $breakpoint-md) {
    max-width: $container-sm;
    padding-left: $p-md;
    padding-right: $p-md;
  }

  @media screen and (max-width: $breakpoint-sm) {
    max-width: none;
  }
}

@mixin containerMin {
  width: 100%;
  max-width: $container-min;
  padding-left: $p;
  padding-right: $p;
  margin: 0 auto;

  @media screen and (max-width: $breakpoint-lg) {
    max-width: $container-md;
  }

  @media screen and (max-width: $breakpoint-md) {
    max-width: $container-sm;
    padding-left: $p-md;
    padding-right: $p-md;
  }

  @media screen and (max-width: $breakpoint-sm) {
    max-width: none;
  }
}

@function strip-unit($number) {
  @if type-of($number)=='number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }
  @return $number;
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;
  $b: $b + $units;
  @return calc(#{$k} * 100vw + #{$b});
}

@function calcFluidFontSize($f-min, $f-max, $w-min, $w-max, $units: px) {
  $f-min: strip-unit($f-min);
  $f-max: strip-unit($f-max);
  $w-min: strip-unit($w-min);
  $w-max: strip-unit($w-max);
  $k: ($f-max - $f-min)/($w-max - $w-min);
  $b: $f-min - $k * $w-min;
  $b: $b + $units;
  @return calc(#{$k} * 100vw + #{$b});
}


@mixin fluid($property, $f-min, $f-max, $w-min: $breakpoint-to-fluid, $w-max: $base-vw, $fallback: false) {
  #{$property}: $f-min;
  @media (min-width: $w-min) {
    @if ($fallback) {
      #{$property}: $fallback;
    }
    #{$property}: calcFluidFontSize($f-min, $f-max, $w-min, $w-max, px);
  }
  @media (min-width: $w-max) {
    #{$property}: $f-max;
  }
}

$breakpoint-hover: 992px;
@mixin hover {
  @media screen and (min-width: $breakpoint-hover) {
    &:hover {
      @content
    }
  }
}

@mixin fluidfm($property, $f-min, $f-max, $f768: null, $f576: null) {
  @include fluid($property, $f-min, $f-max);
  @media screen and (max-width: 768px) {
    @if $f768 {
      #{$property}: $f768;
    }
  }
  @media screen and (max-width: 576px) {
    @if $f576 {
      #{$property}: $f576;
    }
  }
}

//тоже самое, что и контейнер, только больше возможностей
.section {
  --container-width: #{$container-lg - $p - $p};

  display: grid;
  grid-template-columns:
    [full-start left-start]
    minmax($p, 1fr)
    [right-start center-start]
    minmax(0, var(--container-width))
    [left-end center-end]
    minmax($p, 1fr)
    [full-end right-end];

  grid-template-rows:
    [full-start left-start center-start right-start]
    auto
    [full-end left-end center-end right-end];

  @media (max-width: $breakpoint-lg) {
    --container-width: #{$container-md};
  }
  @media (max-width: $breakpoint-md) {
    --container-width: #{$container-sm};
  }
  @media (max-width: $breakpoint-sm) {
    --container-width: 100%;
  }

  &--grow {
    flex-grow: 1;
  }

  &--mb {
    margin-bottom: 80px;
  }

  &__container {
    grid-area: center;
    height: max-content;
  }
}
